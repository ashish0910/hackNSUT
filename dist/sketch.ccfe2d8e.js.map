{"version":3,"sources":["js/sketch.js"],"names":["video","poseNet","poses","setup","createCanvas","createCapture","VIDEO","size","width","height","ml5","modelReady","on","results","hide","select","html","draw","image","drawKeypoints","drawSkeleton","i","length","pose","j","keypoints","keypoint","score","fill","noStroke","ellipse","position","x","y","skeleton","partA","partB","stroke","line"],"mappings":"AAAA,IAAIA,KAAJ;AACA,IAAIC,OAAJ;AACA,IAAIC,KAAK,GAAG,EAAZ;;AAEA,SAASC,KAAT,GAAiB;AACfC,EAAAA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAZ;AACAJ,EAAAA,KAAK,GAAGK,aAAa,CAACC,KAAD,CAArB;AACAN,EAAAA,KAAK,CAACO,IAAN,CAAWC,KAAX,EAAkBC,MAAlB,EAHe,CAKf;;AACAR,EAAAA,OAAO,GAAGS,GAAG,CAACT,OAAJ,CAAYD,KAAZ,EAAmBW,UAAnB,CAAV,CANe,CAOf;AACA;;AACAV,EAAAA,OAAO,CAACW,EAAR,CAAW,MAAX,EAAmB,UAASC,OAAT,EAAkB;AACnCX,IAAAA,KAAK,GAAGW,OAAR;AACD,GAFD,EATe,CAYf;;AACAb,EAAAA,KAAK,CAACc,IAAN;AACD;;AAED,SAASH,UAAT,GAAsB;AACpBI,EAAAA,MAAM,CAAC,SAAD,CAAN,CAAkBC,IAAlB,CAAuB,cAAvB;AACD;;AAED,SAASC,IAAT,GAAgB;AACdC,EAAAA,KAAK,CAAClB,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAcQ,KAAd,EAAqBC,MAArB,CAAL,CADc,CAGd;;AACAU,EAAAA,aAAa;AACbC,EAAAA,YAAY;AACb,EAED;;;AACA,SAASD,aAAT,GAA0B;AACxB;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,KAAK,CAACoB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC;AACA,QAAIE,IAAI,GAAGrB,KAAK,CAACmB,CAAD,CAAL,CAASE,IAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,SAAL,CAAeH,MAAnC,EAA2CE,CAAC,EAA5C,EAAgD;AAC9C;AACA,UAAIE,QAAQ,GAAGH,IAAI,CAACE,SAAL,CAAeD,CAAf,CAAf,CAF8C,CAG9C;;AACA,UAAIE,QAAQ,CAACC,KAAT,GAAiB,GAArB,EAA0B;AACxBC,QAAAA,IAAI,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAJ;AACAC,QAAAA,QAAQ;AACRC,QAAAA,OAAO,CAACJ,QAAQ,CAACK,QAAT,CAAkBC,CAAnB,EAAsBN,QAAQ,CAACK,QAAT,CAAkBE,CAAxC,EAA2C,EAA3C,EAA+C,EAA/C,CAAP;AACD;AACF;AACF;AACF,EAED;;;AACA,SAASb,YAAT,GAAwB;AACtB;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,KAAK,CAACoB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIa,QAAQ,GAAGhC,KAAK,CAACmB,CAAD,CAAL,CAASa,QAAxB,CADqC,CAErC;;AACA,SAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,QAAQ,CAACZ,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACxC,UAAIW,KAAK,GAAGD,QAAQ,CAACV,CAAD,CAAR,CAAY,CAAZ,CAAZ;AACA,UAAIY,KAAK,GAAGF,QAAQ,CAACV,CAAD,CAAR,CAAY,CAAZ,CAAZ;AACAa,MAAAA,MAAM,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAN;AACAC,MAAAA,IAAI,CAACH,KAAK,CAACJ,QAAN,CAAeC,CAAhB,EAAmBG,KAAK,CAACJ,QAAN,CAAeE,CAAlC,EAAqCG,KAAK,CAACL,QAAN,CAAeC,CAApD,EAAuDI,KAAK,CAACL,QAAN,CAAeE,CAAtE,CAAJ;AACD;AACF;AACF","file":"sketch.ccfe2d8e.js","sourceRoot":"..\\public","sourcesContent":["let video;\r\nlet poseNet;\r\nlet poses = [];\r\n\r\nfunction setup() {\r\n  createCanvas(640, 480);\r\n  video = createCapture(VIDEO);\r\n  video.size(width, height);\r\n\r\n  // Create a new poseNet method with a single detection\r\n  poseNet = ml5.poseNet(video, modelReady);\r\n  // This sets up an event that fills the global variable \"poses\"\r\n  // with an array every time new poses are detected\r\n  poseNet.on('pose', function(results) {\r\n    poses = results;\r\n  });\r\n  // Hide the video element, and just show the canvas\r\n  video.hide();\r\n}\r\n\r\nfunction modelReady() {\r\n  select('#status').html('Model Loaded');\r\n}\r\n\r\nfunction draw() {\r\n  image(video, 0, 0, width, height);\r\n\r\n  // We can call both functions to draw all keypoints and the skeletons\r\n  drawKeypoints();\r\n  drawSkeleton();\r\n}\r\n\r\n// A function to draw ellipses over the detected keypoints\r\nfunction drawKeypoints()Â  {\r\n  // Loop through all the poses detected\r\n  for (let i = 0; i < poses.length; i++) {\r\n    // For each pose detected, loop through all the keypoints\r\n    let pose = poses[i].pose;\r\n    for (let j = 0; j < pose.keypoints.length; j++) {\r\n      // A keypoint is an object describing a body part (like rightArm or leftShoulder)\r\n      let keypoint = pose.keypoints[j];\r\n      // Only draw an ellipse is the pose probability is bigger than 0.2\r\n      if (keypoint.score > 0.2) {\r\n        fill(255, 0, 0);\r\n        noStroke();\r\n        ellipse(keypoint.position.x, keypoint.position.y, 10, 10);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// A function to draw the skeletons\r\nfunction drawSkeleton() {\r\n  // Loop through all the skeletons detected\r\n  for (let i = 0; i < poses.length; i++) {\r\n    let skeleton = poses[i].skeleton;\r\n    // For every skeleton, loop through all body connections\r\n    for (let j = 0; j < skeleton.length; j++) {\r\n      let partA = skeleton[j][0];\r\n      let partB = skeleton[j][1];\r\n      stroke(255, 0, 0);\r\n      line(partA.position.x, partA.position.y, partB.position.x, partB.position.y);\r\n    }\r\n  }\r\n}\r\n"]}